# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish Blog to Azure VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: test with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: test

    - name: Build and create Docker Image with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: bootBuildImage -PactiveMode=${{ secrets.ACTIVE_MODE }} 
          -Pport=${{ secrets.USER_SERVER_PORT }} 
          -PrdbmsUrl=${{ secrets.RDBMS_URL }} 
          -PrdbmsUsername=${{ secrets.RDBMS_USER_NAME }} 
          -PrdbmsPassword=${{ secrets.RDBMS_PASSWORD }}

    - name: extract version name
      run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}?(\-|\w|\d|)+')"
      id: extract_version_name

    - name: create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version_name.outputs.version }}
        release_name: v${{ steps.extract_version_name.outputs.version }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHP_TOKEN }}

    - name: Attach new tag after push to GitHub Package
      shell: bash
      run: |
        docker tag blog_user:latest ghcr.io/oct-sky-out/blog_user:${{ steps.extract_version_name.outputs.version }}
        docker push ghcr.io/oct-sky-out/blog_user:${{ steps.extract_version_name.outputs.version }}

    - name: pull newly version blog user app
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BLOG_SSH_IP }}
        username: ${{ secrets.BLOG_SSH_ID }}
        key: ${{ secrets.BLOG_SSH_KEY }}
        port: ${{ secrets.BLOG_SSH_PORT }}
        script_stop: true
        script: ./blog_user_app_image_pull.sh ${{ steps.extract_version_name.outputs.version }}

    - name : remove before container and image
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BLOG_SSH_IP }}
        username: ${{ secrets.BLOG_SSH_ID }}
        key: ${{ secrets.BLOG_SSH_KEY }}
        port: ${{ secrets.BLOG_SSH_PORT }}
        script_stop: true
        script: ./remove_before_container_user.sh

    - name : execute newly blog_user image version
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BLOG_SSH_IP }}
        username: ${{ secrets.BLOG_SSH_ID }}
        key: ${{ secrets.BLOG_SSH_KEY }}
        port: ${{ secrets.BLOG_SSH_PORT }}
        script_stop: true
        script: ./bootstrap_blog_user_app_container.sh ${{ steps.extract_version_name.outputs.version }}

    - name : overwirte before version file
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BLOG_SSH_IP }}
        username: ${{ secrets.BLOG_SSH_ID }}
        key: ${{ secrets.BLOG_SSH_KEY }}
        port: ${{ secrets.BLOG_SSH_PORT }}
        script_stop: true
        script: sudo echo ${{ steps.extract_version_name.outputs.version }} > ./before_version_user.txt
